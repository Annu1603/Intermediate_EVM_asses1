// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract SimpleContract {
    address public owner;
    uint256 public count;

    constructor() {
        owner = msg.sender;
    }

    // Function to increment the count
    function increment() public {
        require(msg.sender == owner, "Only the owner can increment the count");
        count += 1;
        assert(count > 0); // Assert that count is always positive
    }

    // Function to decrement the count
    function decrement() public {
        require(msg.sender == owner, "Only the owner can decrement the count");
        if (count == 0) {
            revert("Count is already zero, cannot decrement");
        }
        count -= 1;
        assert(count >= 0); // Assert that count is never negative
    }

    // Function to reset the count
    function resetCount() public {
        require(msg.sender == owner, "Only the owner can reset the count");
        count = 0;
    }
}
